[
    {
        "id": 1,
        "name": "HTML",
        "skill_Level": "Beginner",
        "Lessons": 53,
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/HTML5_logo_and_wordmark.svg/640px-HTML5_logo_and_wordmark.svg.png",
        "description": "The HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets and scripting languages such as JavaScript.",
        "latest_version": "HTML 5.3",
        "initial_release": 1993,
        "title": "HTML: HyperText Markup Language",
        "image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/20220714111443/HTML-Introduction.jpg",
        "details": "HTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content. Other technologies besides HTML are generally used to describe a web page's appearance/presentation (CSS) or functionality/behavior (JavaScript).'Hypertext' refers to links that connect web pages to one another, either within a single website or between websites. Links are a fundamental aspect of the Web. By uploading content to the Internet and linking it to pages created by other people, you become an active participant in the World Wide Web. HTML uses 'markup' to annotate text, images, and other content for display in a Web browser. HTML markup includes special 'elements' such as <head>, <title>, <body>, <header>, <footer>, <article>, <section>, <p>, <div>, <span>, <img>, <aside>, <audio>, <canvas>, <datalist>, <details>, <embed>, <nav>, <output>, <progress>, <video>, <ul>, <ol>, <li> and many others. An HTML element is set off from other text in a document by 'tags', which consist of the element name surrounded by '<' and '>'. The name of an element inside a tag is case insensitive. That is, it can be written in uppercase, lowercase, or a mixture. For example, the <title> tag can be written as <Title>, <TITLE>, or in any other way. However, the convention and recommended practice is to write tags in lowercase. The articles below can help you learn more about HTML. Key resources HTML Introduction If you're new to web development, be sure to read our HTML Basics article to learn what HTML is and how to use it.HTML Tutorials For articles about how to use HTML, as well as tutorials and complete examples, check out our HTML Learning Area. HTML Reference In our extensive HTML reference section, you will find the details about every element and attribute in HTML. Looking to become a front-end web developer? We have put together a course that includes all the essential information you need to work towards your goal.Get started.Beginner's tutorials Our HTML Learning Area features multiple modules that teach HTML from the ground up — no previous knowledge required.Introduction to HTML. This module sets the stage, getting you used to important concepts and syntax such as looking at applying HTML to text, how to create hyperlinks, and how to use HTML to structure a web page.Multimedia and embedding.This module explores how to use HTML to include multimedia in your web pages, including the different ways that images can be included, and how to embed video, audio, and even entire other webpages.HTML tables Representing tabular data on a webpage in an understandable, accessible way can be a challenge. This module covers basic table markup, along with more complex features such as implementing captions and summaries.HTML forms    Forms are a very important part of the Web — these provide much of the functionality you need for interacting with websites, e.g. registering and logging in, sending feedback, buying products, and more. This module gets you started with creating the client-side/front-end parts of forms."
    },
    {
        "id": 2,
        "name": "CSS",
        "skill_Level": "Beginner",
        "Lessons": 89,
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/CSS3_logo_and_wordmark.svg/1200px-CSS3_logo_and_wordmark.svg.png",
        "description": "Cascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML or XML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.",
        "latest_version": "CSS 2.1",
        "initial_release": 1996,
        "title": "CSS: Cascading Style Sheets",
        "image": "https://web-dev.imgix.net/image/foR0vJZKULb5AGJExlazy1xYDgI2/N5mplhgLlq9qzABgyYKQ.png?auto=format&fit=max&w=1200&fm=auto",
        "details": "Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media.CSS is among the core languages of the open web and is standardized across Web browsers according to W3C specifications. Previously, the development of various parts of CSS specification was done synchronously, which allowed the versioning of the latest recommendations. You might have heard about CSS1, CSS2.1, or even CSS3. There will never be a CSS3 or a CSS4; rather, everything is now CSS without a version number.After CSS 2.1, the scope of the specification increased significantly and the progress on different CSS modules started to differ so much, that it became more effective to develop and release recommendations separately per module. Instead of versioning the CSS specification, W3C now periodically takes a snapshot of the latest stable state of the CSS specification and individual modules progress. CSS modules now have version numbers, or levels, such as CSS Color Module Level 5"
    },
    {
        "id": 3,
        "name": "JavaScript",
        "skill_Level": "Beginner",
        "Lessons": 119,
        "logo": "https://static.javatpoint.com/images/javascript/javascript_logo.png",
        "description": "JavaScript, often abbreviated as JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS. As of 2022, 98% of websites use JavaScript on the client side for webpage behavior, often incorporating third-party libraries.",
        "latest_version": "ECMAScript 2021",
        "initial_release": 1995,
        "title": "JavaScript",
        "image": "https://cdn.educba.com/academy/wp-content/uploads/2019/03/introduction-to-javascript.png",
        "details": "JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, supporting object-oriented, imperative, and declarative (e.g. functional programming) styles. Read more about JavaScript.This section is dedicated to the JavaScript language itself, and not the parts that are specific to Web pages or other host environments. For information about APIs that are specific to Web pages, please see Web APIs and DOM.The standards for JavaScript are the ECMAScript Language Specification (ECMA-262) and the ECMAScript Internationalization API specification (ECMA-402). As soon as one browser implements a feature, we try to document it. This means that cases where some proposals for new ECMAScript features have already been implemented in browsers, documentation and examples in MDN articles may use some of those new features. Most of the time, this happens between the stages 3 and 4, and is usually before the spec is officially published. Do not confuse JavaScript with the Java programming language. Both 'Java' and 'JavaScript' are trademarks or registered trademarks of Oracle in the U.S. and other countries. However, the two programming languages have very different syntax, semantics, and use."
    },
    {
        "id": 4,
        "name": "React",
        "skill_Level": "Intermediate",
        "Lessons": 28,
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2300px-React-icon.svg.png",
        "description": "React is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.",
        "latest_version": 18,
        "initial_release": 2013,
        "title": "Getting started with React",
        "image": "https://uploads-ssl.webflow.com/600858e67ea04d31ad3c2e4f/621f75e68bba5a1e1d5c05f7_What%20companies%20use%20React_.png",
        "details": "As its official tagline states, React is a library for building user interfaces. React is not a framework. it not even exclusive to the web. It's used with other libraries to render to certain environments. For instance, React Native can be used to build mobile applications.To build for the web, developers use React in tandem with ReactDOM. React and ReactDOM are often discussed in the same spaces as — and utilized to solve the same problems as — other true web development frameworks. When we refer to React as a 'framework', we are working with that colloquial understanding.React is primary goal is to minimize the bugs that occur when developers are building UIs. It does this through the use of components — self-contained, logical pieces of code that describe a portion of the user interface. These components can be composed together to create a full UI, and React abstracts away much of the rendering work, leaving you to concentrate on the UI design.Use cases.Unlike the other frameworks covered in this module, React does not enforce strict rules around code conventions or file organization. This allows teams to set conventions that work best for them, and to adopt React in any way they would like to. React can handle a single button, a few pieces of an interface, or an app's entire user interface.While React can be used for small pieces of an interface, it's not as easy to 'drop into' an application as a library like jQuery, or even a framework like Vue — it is more approachable when you build your entire app with React.In addition, many of the developer-experience benefits of a React app, such as writing interfaces with JSX, require a compilation process. Adding a compiler like Babel to a website makes the code on it run slowly, so developers often set up such tooling with a build step. React arguably has a heavy tooling requirement, but it can be learned.This article is going to focus on the use case of using React to render the entire user interface of an application, using tooling provided by Facebook own create-react-app tool. How does React use JavaScript? React utilizes features of modern JavaScript for many of its patterns. Its biggest departure from JavaScript comes with the use of JSX syntax. JSX extends JavaScript's syntax so that HTML-like code can live alongside it."
    },
    {
        "id": 5,
        "name": "Git",
        "skill_Level": "advance",
        "Lessons": 28,
        "logo": "https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png",
        "description": "Git is free and open source software for distributed version control: tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development.",
        "latest_version": 2,
        "initial_release": 2005,
        "title": "Getting Started - About Version Control",
        "image": "https://www.nobledesktop.com/image/gitresources/git-branches-merge.png",
        "details": "This chapter will be about getting started with Git. We will begin by explaining some background on version control tools, then move on to how to get Git running on your system and finally how to get it set up to start working with. At the end of this chapter you should understand why Git is around, why you should use it and you should be all set up to do so.About Version Control. What is “version control”, and why should you care? Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. For the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.If you are a graphic or web designer and want to keep every version of an image or layout (which you would most certainly want to), a Version Control System (VCS) is a very wise thing to use. It allows you to revert selected files back to a previous state, revert the entire project back to a previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more. Using a VCS also generally means that if you screw things up or lose files, you can easily recover. In addition, you get all this for very little overhead.Local Version Control Systems.Many peoples version-control method of choice is to copy files into another directory (perhaps a time-stamped directory, if theyre clever). This approach is very common because it is so simple, but it is also incredibly error prone. It is easy to forget which directory youre in and accidentally write to the wrong file or copy over files you dont mean to.To deal with this issue, programmers long ago developed local VCSs that had a simple database that kept all the changes to files under revision control."
    },
    {
        "id": 6,
        "name": "MongoDB",
        "skill_Level": "Advanced ",
        "Lessons": 20,
        "logo": "https://g.foolcdn.com/art/companylogos/square/mdb.png",
        "description": "MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License which is deemed non-free by several distributions.",
        "latest_version": 6,
        "initial_release": 2009,
        "title": "MongoDB Getting Started",
        "image": "https://i.ytimg.com/vi/-56x56UppqQ/maxresdefault.jpg",
        "details": "MongoDB is a document database and can be installed locally or hosted in the cloud.SQL databases are considered relational databases. They store related data in separate tables. When data is needed, it is queried from multiple tables to join the data back together.MongoDB is a document database which is often referred to as a non-relational database. This does not mean that relational data cannot be stored in document databases. It means that relational data is stored differently. A better way to refer to it is as a non-tabular database.MongoDB stores data in flexible documents. Instead of having multiple tables you can simply keep all of your related data together. This makes reading your data very fast.You can still have multiple groups of data too. In MongoDB, instead of tables these are called collections.MongoDB can be installed locally, which will allow you to host your own MongoDB server on your hardware. This requires you to manage your server, upgrades, and any other maintenance.You can download and use the MongoDB open source Community Server on your hardware for free.However, for this course we are going to use MongoDB Atlas, a cloud database platform. This is much easier than hosting your own local database.To be able to experiment with the code examples, you will need access to a MongoDB database.Sign up for a free MongoDB Atlas account to get started.After you have created your account, set up a free 'Shared Cluster' then choose your preferred cloud provider and region.By default, MongoDB Atlas is completely locked down and has no external access.You will need to set up a user and add your IP address to the list of allowed IP addresses.Under 'Database Access', create a new user and keep track of the username and password.Next, under 'Network Access', add your current IP address to allow access from your computer. Install MongoDB Shell (mongosh). There are many ways to connect to your MongoDB database. We will start by using the MongoDB Shell, mongosh.Use the official instructions to install mongosh on your operating system. To verify that it has been installed properly, open your terminal and type:mongosh --version  You should see that the latest verion is installed. The version used in this tutorial is v1.3.1. Connect to the database. To connect to your database, you will need your database specific connection string.In the MongoDB Atlas dashboard, under 'Databases', click the 'Connect' button for your Cluster. Next, choose 'Connect with the MongoDB Shell'."
    }
]